name: Build React Native App

on:
  push:
    branches:
      - NoExpo
  pull_request:
    branches:
      - NoExpo

jobs:
  android-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Gradle Deps
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
        

      - name: Install dependencies
        run: npm install

      - name: Prebuild Project
        run: npx expo prebuild --platform android

      - name: Create env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > .env

      - name: Decode Keystore from Secrets
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create `gradle.properties` with Signing Config
        run: |
          echo "NIMBUS_UPLOAD_STORE_FILE=keystore.jks" >> android/gradle.properties
          echo "NIMBUS_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/gradle.properties
          echo "NIMBUS_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "NIMBUS_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties
  
      - name: Inject Signing Config into build.gradle
        run: |
          sed -i '/signingConfigs {/a\
              release {\n\
                  storeFile file(System.getenv("NIMBUS_UPLOAD_STORE_FILE") ?: "keystore.jks")\n\
                  storePassword System.getenv("NIMBUS_UPLOAD_STORE_PASSWORD")\n\
                  keyAlias System.getenv("NIMBUS_UPLOAD_KEY_ALIAS")\n\
                  keyPassword System.getenv("NIMBUS_UPLOAD_KEY_PASSWORD")\n\
              }\n\
          ' android/app/build.gradle

          sed -i '/buildTypes {/a\
              release {\n\
                  signingConfig signingConfigs.release\n\
              }\n\
          ' android/app/build.gradle

      - name: Grant Exec Permissions
        run: chmod +x android/gradlew

      - name: Build Android
        run: cd android && ./gradlew assembleRelease --parallel --daemon --build-cache --configure-on-demand

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk
  # ios-build:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Prebuild Project
  #       run: npx expo prebuild --platform ios

  #     - name: Install CocoaPods
  #       run: cd ios && pod install
      
  #     - name: Build iOS
  #       run: cd ios && xcodebuild -workspace nimbus.xcworkspace -scheme nimbus -sdk iphoneos -configuration Release archive